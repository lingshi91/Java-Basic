1、对象的存储：①数组（基本数据类型、 &引用数据类型）  ②集合（引用数据类型）
>数组存放的弊端

2、集合框架
Collection接口： 方法：1.**add(Object obj)**，addAll(Collection coll),size(),clear(),isEmpty();
                      2.**remove(Object obj)**,removeAll(Collection coll),retaionAll(Collection coll),equals(Object obj)：判断两个集合是否相等,contains(Object coll),
                      containsAll(Collection coll) ：是否包含另一个集合的所有元素  
                      第二类方法，要求操作的对象必须重写存储对象类的equals方法
                      3.**iterator()**,toArray()

                      *  	Collection接口
                   	 *  				|-----**List接口：存储有序、可重复的元素    新增的方法：删除 remove(int index) 修改set(int index,Object obj) 获取get(int index)
                                                                                  插入add(int index,Object obj)**
                   	 *  							|------ArraList(主要的实现类，底层依赖数组进行实现、非线程安全)、LinkedList(底层依赖链表实现，适用于频发插入、删除操作)、Vector(较老、很少使用、线程安全)
                   	 *  				|-----**Set接口：存储无序、不可重复的元素**
                   	 *  							|------HashSet、LinkedHashSet、TreeSet
                   	 *  	Map接口 : 存储“键-值”对的数据
                   	 *  				|----------------HashMap、LinkedHashMap、TreeMap、HashTable（子类：properties）
                   	 *  
